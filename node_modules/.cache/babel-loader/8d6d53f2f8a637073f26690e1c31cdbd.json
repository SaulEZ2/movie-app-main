{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sauls.DESKTOP-PNDI2L9\\\\OneDrive\\\\Escritorio\\\\movie-app-main\\\\src\\\\components\\\\rating\\\\index.tsx\",\n    _s = $RefreshSig$();\n\n// Repo of the creator of this component: https://github.com/awran5/react-simple-star-rating/blob/main/src/Components/Rating.tsx\nimport React, { useCallback, useContext, Fragment, useMemo, useReducer } from \"react\";\nimport { UserContext } from \"context\";\nimport { StarIcon } from \"./starIcon\";\nimport styles from \"./rating.module.scss\";\n/**\n * check for touch devices\n *\n * @returns `boolean`\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isTouchDevice = () => \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n\nfunction calculateCurrentPosition(totalIcons, positionX, width) {\n  const iconWidth = width / totalIcons;\n  let currentValue = totalIcons;\n\n  for (let i = 0; i < totalIcons; i += 1) {\n    // if position less then quarter icon\n    if (positionX <= iconWidth * i + iconWidth / 4) {\n      // if there is no value return 0\n      if (i === 0 && positionX < iconWidth / 2) currentValue = 0;else currentValue = i;\n      break;\n    }\n  }\n\n  return currentValue;\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"PointerMove\":\n      return { ...state,\n        hoverValue: action.payload\n      };\n\n    case \"PointerLeave\":\n      return {\n        defaultValue: state.defaultValue,\n        hoverValue: null\n      };\n\n    case \"MouseClick\":\n      return { ...state,\n        defaultValue: action.payload\n      };\n\n    case \"KeyDown\":\n      return { ...state,\n        defaultValue: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst Rating = _ref => {\n  _s();\n\n  let {\n    onClick,\n    initialValue = 0,\n    ratingValue = 0,\n    iconsCount = 5,\n    size = 30,\n    readonly = false,\n    fillColor = \"#e74596\",\n    fillColorArray = [],\n    emptyColor,\n    fullIcon = null,\n    emptyIcon = null,\n    customIcons = [],\n    allowHalfIcon = false,\n    allowHover = true,\n    transition = false,\n    showTooltip = false,\n    tooltipDefaultText = \"Your Rate\",\n    tooltipArray = []\n  } = _ref;\n  const {\n    texts\n  } = useContext(UserContext);\n  const [{\n    defaultValue,\n    hoverValue\n  }, dispatch] = useReducer(reducer, {\n    defaultValue: ratingValue,\n    hoverValue: null\n  }); // re-render when ratingValue changes\n\n  React.useEffect(() => dispatch({\n    type: \"MouseClick\",\n    payload: ratingValue\n  }), [ratingValue]);\n  /**\n   * use pointer event rather than mouse event\n   *\n   * @param event\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent\n   * @returns `void`\n   */\n\n  const onPointerMove = event => {\n    const {\n      clientX,\n      currentTarget\n    } = event; // get main span element position and width\n\n    const {\n      left,\n      width\n    } = currentTarget.children[0].getBoundingClientRect();\n    const positionX = clientX - left; // Get current pointer position while moves over the icons\n\n    const currentValue = calculateCurrentPosition(totalIcons, positionX, width); // set the value to state\n\n    if (currentValue > 0 && hoverValue !== currentValue) {\n      dispatch({\n        type: \"PointerMove\",\n        payload: currentValue * 100 / totalIcons\n      });\n    }\n  };\n  /**\n   * handle onEnter\n   * @param event\n   * @returns `void`\n   */\n\n\n  const onPointerEnter = event => {\n    // enable only on touch devices\n    if (!isTouchDevice()) return; // call to get the value\n\n    onPointerMove(event);\n  };\n  /**\n   * handle onClick\n   * @returns `void`\n   */\n\n\n  const onRate = () => {\n    if (hoverValue) {\n      dispatch({\n        type: \"MouseClick\",\n        payload: hoverValue\n      }); // update value on click\n\n      if (onClick) onClick(hoverValue);\n    } else {\n      if (onClick) onClick(defaultValue);\n    }\n  };\n  /**\n   * handle onLeave\n   * @returns `void`\n   */\n\n\n  const onPointerLeave = () => {\n    if (isTouchDevice()) onRate();\n    dispatch({\n      type: \"PointerLeave\"\n    });\n  }; // if there is a local rating value, convert it to precentage\n\n\n  const localRating = useMemo(() => Math.round(initialValue / iconsCount * 100), [initialValue, iconsCount]);\n  /**\n   * convert rating value to percentage value\n   * @returns `hover value` | `rating value` | `local rating`\n   */\n\n  const valuePercentage = useMemo(() => allowHover && hoverValue && hoverValue || defaultValue && defaultValue || localRating, [allowHover, hoverValue, defaultValue, localRating]); // handle total icons\n\n  const totalIcons = useMemo(() => allowHalfIcon ? iconsCount * 2 : iconsCount, [allowHalfIcon, iconsCount]); // convert value to index\n\n  const valueIndex = useCallback(value => {\n    let index = 1;\n\n    if (value) {\n      index = Math.round(value / 100 * totalIcons) + 1;\n    }\n\n    return Math.round(index - 1);\n  }, [totalIcons]); // convert value to render value\n\n  const renderValue = useCallback(value => {\n    const rvalue = valueIndex(value);\n    return allowHalfIcon ? rvalue / 2 : rvalue;\n  }, [allowHalfIcon, valueIndex]); // handle tooltip values\n\n  const handleTooltip = value => tooltipArray.length > 0 ? tooltipArray[valueIndex(value)] : renderValue(value) || 0; // handle value with arrow keys\n\n\n  const handleKeyDown = event => {\n    const {\n      key\n    } = event;\n    const value = defaultValue || 0;\n\n    switch (key) {\n      case \"ArrowLeft\":\n        const newValLeft = value - (allowHalfIcon ? iconsCount * 2 : iconsCount);\n        if (newValLeft <= 5) return dispatch({\n          type: \"KeyDown\",\n          payload: 10\n        });\n        dispatch({\n          type: \"KeyDown\",\n          payload: newValLeft\n        });\n        break;\n\n      case \"ArrowRight\":\n        const newValRight = value + (allowHalfIcon ? iconsCount * 2 : iconsCount);\n        if (newValRight >= 100) return dispatch({\n          type: \"KeyDown\",\n          payload: 100\n        });\n        dispatch({\n          type: \"KeyDown\",\n          payload: newValRight\n        });\n        break;\n\n      case \"Enter\":\n        onRate();\n        break;\n\n      case \"ArrowLeft\" || \"ArrowDown\" || \"Enter\":\n        event.preventDefault();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: styles.rating,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.rating__stars,\n      style: {\n        cursor: readonly ? \"\" : \"pointer\"\n      },\n      onPointerMove: readonly ? undefined : onPointerMove,\n      onPointerEnter: readonly ? undefined : onPointerEnter,\n      onPointerLeave: readonly ? undefined : onPointerLeave,\n      onClick: readonly ? undefined : onRate,\n      onKeyDown: readonly ? undefined : handleKeyDown,\n      tabIndex: 0,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.rating__stars_empty,\n        style: {\n          color: emptyColor\n        },\n        children: [...Array(iconsCount)].map((_, index) => {\n          var _customIcons$index;\n\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: ((_customIcons$index = customIcons[index]) === null || _customIcons$index === void 0 ? void 0 : _customIcons$index.icon) || emptyIcon || /*#__PURE__*/_jsxDEV(StarIcon, {\n              size: size\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 50\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 7\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.rating__stars_filled,\n        style: {\n          color: allowHover && hoverValue && fillColorArray[valueIndex(hoverValue)] || defaultValue && fillColorArray[valueIndex(defaultValue)] || fillColor,\n          transition: transition ? \"width .2s ease, color .2s ease\" : \"\",\n          width: `${valuePercentage}%`\n        },\n        title: `${hoverValue && renderValue(hoverValue) || renderValue(localRating)} ${texts.rating} ${iconsCount}`,\n        children: [...Array(iconsCount)].map((_, index) => {\n          var _customIcons$index2;\n\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: ((_customIcons$index2 = customIcons[index]) === null || _customIcons$index2 === void 0 ? void 0 : _customIcons$index2.icon) || fullIcon || /*#__PURE__*/_jsxDEV(StarIcon, {\n              size: size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 49\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 7\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 4\n    }, this), showTooltip && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.rating__tooltip,\n      children: hoverValue && handleTooltip(hoverValue) || defaultValue && handleTooltip(defaultValue) || localRating && handleTooltip(localRating) || tooltipDefaultText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Rating, \"rA/OqnN+vCA3qKFBHB1KwLbqoGI=\");\n\n_c = Rating;\nexport { Rating };\n\nvar _c;\n\n$RefreshReg$(_c, \"Rating\");","map":{"version":3,"names":["React","useCallback","useContext","Fragment","useMemo","useReducer","UserContext","StarIcon","styles","isTouchDevice","window","navigator","maxTouchPoints","calculateCurrentPosition","totalIcons","positionX","width","iconWidth","currentValue","i","reducer","state","action","type","hoverValue","payload","defaultValue","Rating","onClick","initialValue","ratingValue","iconsCount","size","readonly","fillColor","fillColorArray","emptyColor","fullIcon","emptyIcon","customIcons","allowHalfIcon","allowHover","transition","showTooltip","tooltipDefaultText","tooltipArray","texts","dispatch","useEffect","onPointerMove","event","clientX","currentTarget","left","children","getBoundingClientRect","onPointerEnter","onRate","onPointerLeave","localRating","Math","round","valuePercentage","valueIndex","value","index","renderValue","rvalue","handleTooltip","length","handleKeyDown","key","newValLeft","newValRight","preventDefault","rating","rating__stars","cursor","undefined","rating__stars_empty","color","Array","map","_","icon","rating__stars_filled","rating__tooltip"],"sources":["C:/Users/sauls.DESKTOP-PNDI2L9/OneDrive/Escritorio/movie-app-main/src/components/rating/index.tsx"],"sourcesContent":["// Repo of the creator of this component: https://github.com/awran5/react-simple-star-rating/blob/main/src/Components/Rating.tsx\nimport React, { useCallback, useContext, Fragment, useMemo, useReducer } from \"react\";\nimport { UserContext } from \"context\";\nimport { StarIcon } from \"./starIcon\";\nimport styles from \"./rating.module.scss\";\n\n/**\n * check for touch devices\n *\n * @returns `boolean`\n */\nconst isTouchDevice = () => \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n\nfunction calculateCurrentPosition(totalIcons: number, positionX: number, width: number) {\n\tconst iconWidth = width / totalIcons;\n\tlet currentValue = totalIcons;\n\n\tfor (let i = 0; i < totalIcons; i += 1) {\n\t\t// if position less then quarter icon\n\t\tif (positionX <= iconWidth * i + iconWidth / 4) {\n\t\t\t// if there is no value return 0\n\t\t\tif (i === 0 && positionX < iconWidth / 2) currentValue = 0;\n\t\t\telse currentValue = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn currentValue;\n}\n\ntype State = {\n\tdefaultValue: number | null;\n\thoverValue: number | null;\n};\n\ntype Action =\n\t| { type: \"PointerMove\"; payload: number | null }\n\t| { type: \"PointerLeave\" }\n\t| { type: \"MouseClick\"; payload: number }\n\t| { type: \"KeyDown\"; payload: number };\n\nfunction reducer(state: State, action: Action): State {\n\tswitch (action.type) {\n\t\tcase \"PointerMove\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thoverValue: action.payload,\n\t\t\t};\n\n\t\tcase \"PointerLeave\":\n\t\t\treturn {\n\t\t\t\tdefaultValue: state.defaultValue,\n\t\t\t\thoverValue: null,\n\t\t\t};\n\n\t\tcase \"MouseClick\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdefaultValue: action.payload,\n\t\t\t};\n\n\t\tcase \"KeyDown\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdefaultValue: action.payload,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport interface Props {\n\tonClick?: (value: number) => void;\n\tinitialValue?: number;\n\tratingValue: number;\n\ticonsCount?: number;\n\tsize?: number;\n\treadonly?: boolean;\n\tfillColor?: string;\n\tfillColorArray?: string[];\n\temptyColor?: string;\n\tfullIcon?: React.ReactElement | null;\n\temptyIcon?: React.ReactElement | null;\n\tcustomIcons?: {\n\t\ticon: React.ReactElement;\n\t}[];\n\tallowHalfIcon?: boolean;\n\tallowHover?: boolean;\n\ttransition?: boolean;\n\tshowTooltip?: boolean;\n\ttooltipDefaultText?: string;\n\ttooltipArray?: string[];\n}\n\nconst Rating = ({\n\tonClick,\n\tinitialValue = 0,\n\tratingValue = 0,\n\ticonsCount = 5,\n\tsize = 30,\n\treadonly = false,\n\tfillColor = \"#e74596\",\n\tfillColorArray = [],\n\temptyColor,\n\tfullIcon = null,\n\temptyIcon = null,\n\tcustomIcons = [],\n\tallowHalfIcon = false,\n\tallowHover = true,\n\ttransition = false,\n\tshowTooltip = false,\n\ttooltipDefaultText = \"Your Rate\",\n\ttooltipArray = [],\n}: Props) => {\n\tconst { texts } = useContext(UserContext);\n\tconst [{ defaultValue, hoverValue }, dispatch] = useReducer(reducer, {\n\t\tdefaultValue: ratingValue,\n\t\thoverValue: null,\n\t});\n\n\t// re-render when ratingValue changes\n\tReact.useEffect(() => dispatch({ type: \"MouseClick\", payload: ratingValue }), [ratingValue]);\n\n\t/**\n\t * use pointer event rather than mouse event\n\t *\n\t * @param event\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent\n\t * @returns `void`\n\t */\n\tconst onPointerMove = (event: React.PointerEvent<HTMLSpanElement>) => {\n\t\tconst { clientX, currentTarget } = event;\n\t\t// get main span element position and width\n\t\tconst { left, width } = currentTarget.children[0].getBoundingClientRect();\n\t\tconst positionX = clientX - left;\n\n\t\t// Get current pointer position while moves over the icons\n\t\tconst currentValue = calculateCurrentPosition(totalIcons, positionX, width);\n\n\t\t// set the value to state\n\t\tif (currentValue > 0 && hoverValue !== currentValue) {\n\t\t\tdispatch({ type: \"PointerMove\", payload: (currentValue * 100) / totalIcons });\n\t\t}\n\t};\n\n\t/**\n\t * handle onEnter\n\t * @param event\n\t * @returns `void`\n\t */\n\tconst onPointerEnter = (event: React.PointerEvent<HTMLSpanElement>) => {\n\t\t// enable only on touch devices\n\t\tif (!isTouchDevice()) return;\n\n\t\t// call to get the value\n\t\tonPointerMove(event);\n\t};\n\n\t/**\n\t * handle onClick\n\t * @returns `void`\n\t */\n\tconst onRate = () => {\n\t\tif (hoverValue) {\n\t\t\tdispatch({ type: \"MouseClick\", payload: hoverValue });\n\t\t\t// update value on click\n\t\t\tif (onClick) onClick(hoverValue);\n\t\t} else {\n\t\t\tif (onClick) onClick(defaultValue as number);\n\t\t}\n\t};\n\n\t/**\n\t * handle onLeave\n\t * @returns `void`\n\t */\n\tconst onPointerLeave = () => {\n\t\tif (isTouchDevice()) onRate();\n\n\t\tdispatch({ type: \"PointerLeave\" });\n\t};\n\n\t// if there is a local rating value, convert it to precentage\n\tconst localRating = useMemo(\n\t\t() => Math.round((initialValue / iconsCount) * 100),\n\t\t[initialValue, iconsCount]\n\t);\n\n\t/**\n\t * convert rating value to percentage value\n\t * @returns `hover value` | `rating value` | `local rating`\n\t */\n\tconst valuePercentage = useMemo(\n\t\t() => (allowHover && hoverValue && hoverValue) || (defaultValue && defaultValue) || localRating,\n\t\t[allowHover, hoverValue, defaultValue, localRating]\n\t);\n\n\t// handle total icons\n\tconst totalIcons = useMemo(\n\t\t() => (allowHalfIcon ? iconsCount * 2 : iconsCount),\n\t\t[allowHalfIcon, iconsCount]\n\t);\n\n\t// convert value to index\n\tconst valueIndex = useCallback(\n\t\t(value: number) => {\n\t\t\tlet index = 1;\n\t\t\tif (value) {\n\t\t\t\tindex = Math.round((value / 100) * totalIcons) + 1;\n\t\t\t}\n\n\t\t\treturn Math.round(index - 1);\n\t\t},\n\t\t[totalIcons]\n\t);\n\n\t// convert value to render value\n\tconst renderValue = useCallback(\n\t\t(value: number) => {\n\t\t\tconst rvalue = valueIndex(value);\n\n\t\t\treturn allowHalfIcon ? rvalue / 2 : rvalue;\n\t\t},\n\t\t[allowHalfIcon, valueIndex]\n\t);\n\n\t// handle tooltip values\n\tconst handleTooltip = (value: number) =>\n\t\ttooltipArray.length > 0 ? tooltipArray[valueIndex(value)] : renderValue(value) || 0;\n\n\t// handle value with arrow keys\n\tconst handleKeyDown = (event: React.KeyboardEvent<HTMLSpanElement>) => {\n\t\tconst { key } = event;\n\t\tconst value = defaultValue || 0;\n\n\t\tswitch (key) {\n\t\t\tcase \"ArrowLeft\":\n\t\t\t\tconst newValLeft = value - (allowHalfIcon ? iconsCount * 2 : iconsCount);\n\t\t\t\tif (newValLeft <= 5) return dispatch({ type: \"KeyDown\", payload: 10 });\n\t\t\t\tdispatch({ type: \"KeyDown\", payload: newValLeft });\n\t\t\t\tbreak;\n\t\t\tcase \"ArrowRight\":\n\t\t\t\tconst newValRight = value + (allowHalfIcon ? iconsCount * 2 : iconsCount);\n\n\t\t\t\tif (newValRight >= 100) return dispatch({ type: \"KeyDown\", payload: 100 });\n\t\t\t\tdispatch({ type: \"KeyDown\", payload: newValRight });\n\t\t\t\tbreak;\n\t\t\tcase \"Enter\":\n\t\t\t\tonRate();\n\t\t\t\tbreak;\n\t\t\tcase \"ArrowLeft\" || \"ArrowDown\" || \"Enter\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\treturn (\n\t\t<span className={styles.rating}>\n\t\t\t<span\n\t\t\t\tclassName={styles.rating__stars}\n\t\t\t\tstyle={{\n\t\t\t\t\tcursor: readonly ? \"\" : \"pointer\",\n\t\t\t\t}}\n\t\t\t\tonPointerMove={readonly ? undefined : onPointerMove}\n\t\t\t\tonPointerEnter={readonly ? undefined : onPointerEnter}\n\t\t\t\tonPointerLeave={readonly ? undefined : onPointerLeave}\n\t\t\t\tonClick={readonly ? undefined : onRate}\n\t\t\t\tonKeyDown={readonly ? undefined : handleKeyDown}\n\t\t\t\ttabIndex={0}\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tclassName={styles.rating__stars_empty}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: emptyColor,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{[...Array(iconsCount)].map((_, index) => (\n\t\t\t\t\t\t<Fragment key={index}>\n\t\t\t\t\t\t\t{customIcons[index]?.icon || emptyIcon || <StarIcon key={index} size={size} />}\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t))}\n\t\t\t\t</span>\n\n\t\t\t\t<span\n\t\t\t\t\tclassName={styles.rating__stars_filled}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t(allowHover && hoverValue && fillColorArray[valueIndex(hoverValue)]) ||\n\t\t\t\t\t\t\t(defaultValue && fillColorArray[valueIndex(defaultValue)]) ||\n\t\t\t\t\t\t\tfillColor,\n\t\t\t\t\t\ttransition: transition ? \"width .2s ease, color .2s ease\" : \"\",\n\t\t\t\t\t\twidth: `${valuePercentage}%`,\n\t\t\t\t\t}}\n\t\t\t\t\ttitle={`${(hoverValue && renderValue(hoverValue)) || renderValue(localRating)} ${\n\t\t\t\t\t\ttexts.rating\n\t\t\t\t\t} ${iconsCount}`}\n\t\t\t\t>\n\t\t\t\t\t{[...Array(iconsCount)].map((_, index) => (\n\t\t\t\t\t\t<Fragment key={index}>\n\t\t\t\t\t\t\t{customIcons[index]?.icon || fullIcon || <StarIcon size={size} />}\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t))}\n\t\t\t\t</span>\n\t\t\t</span>\n\n\t\t\t{showTooltip && (\n\t\t\t\t<span className={styles.rating__tooltip}>\n\t\t\t\t\t{(hoverValue && handleTooltip(hoverValue)) ||\n\t\t\t\t\t\t(defaultValue && handleTooltip(defaultValue)) ||\n\t\t\t\t\t\t(localRating && handleTooltip(localRating)) ||\n\t\t\t\t\t\ttooltipDefaultText}\n\t\t\t\t</span>\n\t\t\t)}\n\t\t</span>\n\t);\n};\n\nexport { Rating };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}