{"ast":null,"code":"import { api, Toast } from \"utils\";\nconst LOCALSTORAGE_KEYS = {\n  accessToken: \"token_request_tmdb\",\n  sessionId: \"session_id_tmdb\"\n}; //Mapa para recuperar valores de almacenamiento local \n\nconst LOCALSTORAGE_VALUES = {\n  accessToken: window.localStorage.getItem(LOCALSTORAGE_KEYS.accessToken),\n  sessionId: window.localStorage.getItem(LOCALSTORAGE_KEYS.sessionId)\n};\nexport const logout = async (msgSuccess, msgError) => {\n  const session_id = JSON.parse(LOCALSTORAGE_VALUES.sessionId);\n  const data = await api.delete(\"/authentication/session\", {\n    data: {\n      session_id\n    }\n  }).then(res => res.data).catch(err => Toast.fire({\n    icon: \"error\",\n    title: msgError\n  }).then(() => console.log(err)));\n\n  if (data !== null && data !== void 0 && data.success && LOCALSTORAGE_VALUES.accessToken && LOCALSTORAGE_VALUES.sessionId) {\n    Object.keys(LOCALSTORAGE_KEYS).forEach(key => {\n      localStorage.removeItem(LOCALSTORAGE_KEYS[key]);\n    });\n  }\n\n  Toast.fire({\n    icon: \"success\",\n    title: msgSuccess\n  });\n  window.location.href = \"/\";\n};\nexport const login = async (username, password, request_token, msg) => {\n  const data = await api.post(\"/authentication/token/validate_with_login\", {\n    request_token,\n    username,\n    password\n  }).then(res => res.data).catch(err => {\n    Toast.fire({\n      icon: \"error\",\n      title: msg\n    });\n    return err;\n  });\n\n  if (data !== null && data !== void 0 && data.success) {\n    window.localStorage.setItem(LOCALSTORAGE_KEYS.accessToken, data.request_token);\n    return data;\n  }\n};\nexport const getSessionId = async request_token => {\n  const session_id = JSON.parse(LOCALSTORAGE_VALUES.sessionId);\n\n  if (session_id && session_id.length > 0) {\n    return session_id;\n  }\n\n  const data = await api.post(\"/authentication/session/new\", {\n    request_token\n  }).then(res => res.data);\n\n  if (data !== null && data !== void 0 && data.success) {\n    window.localStorage.setItem(LOCALSTORAGE_KEYS.sessionId, JSON.stringify(data.session_id)); // Reload the page for localStorage updates to be reflected\n\n    window.location.reload();\n  }\n\n  return data.session_id;\n};\nexport const getAccount = async session_id => await api.get(\"/account\", {\n  params: {\n    session_id\n  }\n}).then(res => res.data);\nexport const toggleFavorite = async _ref => {\n  let {\n    account_id,\n    session_id,\n    movie_id,\n    favorite,\n    add,\n    remove,\n    err\n  } = _ref;\n  return await api.post(`/account/${account_id}/favorite`, {\n    media_type: \"movie\",\n    movie_id,\n    favorite: !favorite\n  }, {\n    params: {\n      session_id\n    }\n  }).then(res => res.data).then(data => {\n    if (data !== null && data !== void 0 && data.success) {\n      Toast.fire({\n        icon: \"success\",\n        title: favorite ? remove : add\n      });\n      return data;\n    }\n  }).catch(e => Toast.fire({\n    icon: \"error\",\n    title: `${err}: ${e.message}`\n  }));\n};\nexport const toggleWatchlater = async _ref2 => {\n  let {\n    account_id,\n    session_id,\n    media_id,\n    watchlater,\n    add,\n    remove,\n    err\n  } = _ref2;\n  return await api.post(`/account/${account_id}/watchlist`, {\n    media_type: \"movie\",\n    media_id,\n    watchlist: !watchlater\n  }, {\n    params: {\n      session_id\n    }\n  }).then(res => res.data).then(data => {\n    if (data !== null && data !== void 0 && data.success) {\n      Toast.fire({\n        icon: \"success\",\n        title: watchlater ? remove : add\n      });\n      return data;\n    }\n  }).catch(e => Toast.fire({\n    icon: \"error\",\n    title: `${err}: ${e.message}`\n  }));\n};\nexport const rateMovie = async _ref3 => {\n  let {\n    movie_id,\n    session_id,\n    value,\n    success,\n    err\n  } = _ref3;\n  return await api.post(`/movie/${movie_id}/rating`, {\n    value\n  }, {\n    params: {\n      session_id\n    }\n  }).then(res => res.data).then(data => {\n    if (data !== null && data !== void 0 && data.success) {\n      Toast.fire({\n        icon: \"success\",\n        title: success\n      });\n      return data;\n    }\n  }).catch(e => Toast.fire({\n    icon: \"error\",\n    title: `${err}: ${e.message}`\n  }));\n};\nexport const deleteRateMovie = async _ref4 => {\n  let {\n    movie_id,\n    session_id,\n    success,\n    err\n  } = _ref4;\n  return await api.delete(`/movie/${movie_id}/rating`, {\n    params: {\n      session_id\n    }\n  }).then(res => res.data).then(data => {\n    if (data !== null && data !== void 0 && data.success) {\n      Toast.fire({\n        icon: \"success\",\n        title: success\n      });\n      return data;\n    }\n  }).catch(e => Toast.fire({\n    icon: \"error\",\n    title: `${err}: ${e.message}`\n  }));\n};","map":{"version":3,"names":["api","Toast","LOCALSTORAGE_KEYS","accessToken","sessionId","LOCALSTORAGE_VALUES","window","localStorage","getItem","logout","msgSuccess","msgError","session_id","JSON","parse","data","delete","then","res","catch","err","fire","icon","title","console","log","success","Object","keys","forEach","key","removeItem","location","href","login","username","password","request_token","msg","post","setItem","getSessionId","length","stringify","reload","getAccount","get","params","toggleFavorite","account_id","movie_id","favorite","add","remove","media_type","e","message","toggleWatchlater","media_id","watchlater","watchlist","rateMovie","value","deleteRateMovie"],"sources":["C:/Users/sauls.DESKTOP-PNDI2L9/OneDrive/Escritorio/movie-app-main/src/utils/api.ts"],"sourcesContent":["import { api, Toast } from \"utils\"\n\n\nconst LOCALSTORAGE_KEYS = {\n  accessToken: \"token_request_tmdb\",\n  sessionId: \"session_id_tmdb\",\n};\n\n//Mapa para recuperar valores de almacenamiento local \nconst LOCALSTORAGE_VALUES = {\n  accessToken: window.localStorage.getItem(LOCALSTORAGE_KEYS.accessToken),\n  sessionId: window.localStorage.getItem(LOCALSTORAGE_KEYS.sessionId),\n};\n\nexport const logout = async (msgSuccess: string, msgError: string) => {\n  const session_id = JSON.parse(LOCALSTORAGE_VALUES.sessionId as string);\n  const data = await api\n    .delete(\"/authentication/session\", { data: { session_id } })\n    .then((res) => res.data)\n    .catch((err) => Toast.fire({\n      icon: \"error\",\n      title: msgError,\n    }).then(() => console.log(err)))\n\n  if (data?.success && LOCALSTORAGE_VALUES.accessToken && LOCALSTORAGE_VALUES.sessionId) {\n    Object.keys(LOCALSTORAGE_KEYS).forEach((key) => {\n      localStorage.removeItem(LOCALSTORAGE_KEYS[key as keyof typeof LOCALSTORAGE_KEYS]);\n    }\n    );\n  }\n\n  Toast.fire({\n    icon: \"success\",\n    title: msgSuccess,\n  });\n\n  window.location.href = \"/\";\n}\n\nexport const login = async (username: string, password: string, request_token: string, msg: string) => {\n  const data = await api\n    .post(\"/authentication/token/validate_with_login\", {\n      request_token,\n      username,\n      password,\n    })\n    .then((res) => res.data)\n    .catch((err) => {\n      Toast.fire({\n        icon: \"error\",\n        title: msg,\n      })\n      return err;\n    })\n\n  if (data?.success) {\n    window.localStorage.setItem(LOCALSTORAGE_KEYS.accessToken, data.request_token);\n    return data\n  }\n}\n\nexport const getSessionId = async (request_token: string) => {\n  const session_id = JSON.parse(LOCALSTORAGE_VALUES.sessionId as string);\n\n  if (session_id && session_id.length > 0) {\n    return session_id;\n  }\n\n  const data = await api.post(\"/authentication/session/new\", { request_token })\n    .then((res) => res.data)\n\n  if (data?.success) {\n    window.localStorage.setItem(LOCALSTORAGE_KEYS.sessionId, JSON.stringify(data.session_id));\n    // Reload the page for localStorage updates to be reflected\n    window.location.reload();\n  }\n\n  return data.session_id;\n}\n\nexport const getAccount = async (session_id: string) => await api.get(\"/account\", { params: { session_id } }).then((res) => res.data);\n\ninterface toggleFavoriteParams {\n  account_id: number;\n  movie_id: number;\n  favorite: boolean;\n  add: boolean;\n  remove: boolean;\n  err: string;\n  session_id: string;\n}\n\nexport const toggleFavorite = async ({ account_id, session_id, movie_id, favorite, add, remove, err }: toggleFavoriteParams) => {\n  return await api\n    .post(\n      `/account/${account_id}/favorite`,\n      { media_type: \"movie\", movie_id, favorite: !favorite },\n      { params: { session_id } }\n    )\n    .then((res) => res.data)\n    .then((data) => {\n      if (data?.success) {\n        Toast.fire({\n          icon: \"success\",\n          title: favorite ? remove : add,\n        });\n        return data;\n      }\n    })\n    .catch((e) =>\n      Toast.fire({\n        icon: \"error\",\n        title: `${err}: ${e.message}`,\n      })\n    );\n}\n\ninterface toggleWatchlaterParams {\n  account_id: number;\n  media_id: number;\n  watchlater: boolean;\n  add: boolean;\n  remove: boolean;\n  err: string;\n  session_id: string;\n}\n\nexport const toggleWatchlater = async ({ account_id, session_id, media_id, watchlater, add, remove, err }: toggleWatchlaterParams) => {\n  return await api\n    .post(\n      `/account/${account_id}/watchlist`,\n      { media_type: \"movie\", media_id, watchlist: !watchlater },\n      { params: { session_id } }\n    )\n    .then((res) => res.data)\n    .then((data) => {\n      if (data?.success) {\n        Toast.fire({\n          icon: \"success\",\n          title: watchlater ? remove : add,\n        });\n        return data;\n      }\n    }).catch((e) =>\n      Toast.fire({\n        icon: \"error\",\n        title: `${err}: ${e.message}`,\n      })\n    );\n}\n\ninterface rateMovieParams {\n  err: string;\n  movie_id: number;\n  session_id: string;\n  success: string;\n  value: number;\n}\n\nexport const rateMovie = async ({ movie_id, session_id, value, success, err }: rateMovieParams) => {\n  return await api\n    .post(`/movie/${movie_id}/rating`, { value }, { params: { session_id } })\n    .then((res) => res.data)\n    .then((data) => {\n      if (data?.success) {\n        Toast.fire({\n          icon: \"success\",\n          title: success,\n        });\n        return data;\n      }\n    })\n    .catch((e) =>\n      Toast.fire({\n        icon: \"error\",\n        title: `${err}: ${e.message}`,\n      })\n    );\n}\n\ninterface deleteRateMovieParams {\n  err: string;\n  movie_id: number;\n  session_id: string;\n  success: string;\n}\n\nexport const deleteRateMovie = async ({ movie_id, session_id, success, err }: deleteRateMovieParams) => {\n  return await api\n    .delete(`/movie/${movie_id}/rating`, { params: { session_id } })\n    .then((res) => res.data)\n    .then((data) => {\n      if (data?.success) {\n        Toast.fire({\n          icon: \"success\",\n          title: success,\n        });\n        return data;\n      }\n    }).catch((e) =>\n      Toast.fire({\n        icon: \"error\",\n        title: `${err}: ${e.message}`,\n      })\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}