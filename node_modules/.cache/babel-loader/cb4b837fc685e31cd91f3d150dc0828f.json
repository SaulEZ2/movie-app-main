{"ast":null,"code":"import { IMG_BASE_URL, DEFAULT_BANNER } from \"config\";\n\nconst lazyLoading = (ref, currentSrc, banner) => {\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if (!entry.isIntersecting) return;\n      const img = entry.target;\n\n      if (currentSrc) {\n        const src = img.src;\n        img.setAttribute(\"src\", \"\");\n        img.src = src;\n      } else {\n        const src = img.getAttribute(\"data-src\");\n        img.setAttribute(\"src\", `${IMG_BASE_URL}/w200/${src}`);\n      }\n\n      img.onload = () => {\n        var _img$parentElement;\n\n        img.classList.add(\"show\");\n        (_img$parentElement = img.parentElement) === null || _img$parentElement === void 0 ? void 0 : _img$parentElement.classList.remove(\"skeleton\");\n      };\n\n      img.onerror = () => {\n        if (banner) {\n          img.setAttribute(\"src\", DEFAULT_BANNER);\n        }\n      };\n\n      observer.unobserve(img);\n    });\n  });\n  observer.observe(ref.current);\n};\n\nexport { lazyLoading };","map":{"version":3,"names":["IMG_BASE_URL","DEFAULT_BANNER","lazyLoading","ref","currentSrc","banner","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","img","target","src","setAttribute","getAttribute","onload","classList","add","parentElement","remove","onerror","unobserve","observe","current"],"sources":["C:/Users/sauls.DESKTOP-PNDI2L9/OneDrive/Escritorio/movie-app-main/src/utils/lazyLoading.ts"],"sourcesContent":["import { IMG_BASE_URL, DEFAULT_BANNER} from \"config\";\n\nconst lazyLoading = (ref: React.RefObject<HTMLImageElement>, currentSrc?: boolean, banner?: boolean) => {\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach((entry) => {\n      if (!entry.isIntersecting) return;\n      const img = entry.target as HTMLImageElement;\n      if (currentSrc) {\n        const src = img.src\n        img.setAttribute(\"src\", \"\")\n        img.src = src\n      } else {\n        const src = img.getAttribute(\"data-src\") as string;\n        img.setAttribute(\"src\", `${IMG_BASE_URL}/w200/${src}`)\n      }\n\n      img.onload = () => {\n        img.classList.add(\"show\")\n        img.parentElement?.classList.remove(\"skeleton\");\n      }\n\n      img.onerror = () => {\n        if (banner) {\n          img.setAttribute(\"src\", DEFAULT_BANNER)\n        }\n      }\n\n      observer.unobserve(img);\n    });\n  });\n  observer.observe(ref.current as HTMLImageElement);\n};\n\nexport { lazyLoading };"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,cAAvB,QAA4C,QAA5C;;AAEA,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAyCC,UAAzC,EAA+DC,MAA/D,KAAoF;EACtG,MAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,CAACC,OAAD,EAAUF,QAAV,KAAuB;IAC/DE,OAAO,CAACC,OAAR,CAAiBC,KAAD,IAAW;MACzB,IAAI,CAACA,KAAK,CAACC,cAAX,EAA2B;MAC3B,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAlB;;MACA,IAAIT,UAAJ,EAAgB;QACd,MAAMU,GAAG,GAAGF,GAAG,CAACE,GAAhB;QACAF,GAAG,CAACG,YAAJ,CAAiB,KAAjB,EAAwB,EAAxB;QACAH,GAAG,CAACE,GAAJ,GAAUA,GAAV;MACD,CAJD,MAIO;QACL,MAAMA,GAAG,GAAGF,GAAG,CAACI,YAAJ,CAAiB,UAAjB,CAAZ;QACAJ,GAAG,CAACG,YAAJ,CAAiB,KAAjB,EAAyB,GAAEf,YAAa,SAAQc,GAAI,EAApD;MACD;;MAEDF,GAAG,CAACK,MAAJ,GAAa,MAAM;QAAA;;QACjBL,GAAG,CAACM,SAAJ,CAAcC,GAAd,CAAkB,MAAlB;QACA,sBAAAP,GAAG,CAACQ,aAAJ,0EAAmBF,SAAnB,CAA6BG,MAA7B,CAAoC,UAApC;MACD,CAHD;;MAKAT,GAAG,CAACU,OAAJ,GAAc,MAAM;QAClB,IAAIjB,MAAJ,EAAY;UACVO,GAAG,CAACG,YAAJ,CAAiB,KAAjB,EAAwBd,cAAxB;QACD;MACF,CAJD;;MAMAK,QAAQ,CAACiB,SAAT,CAAmBX,GAAnB;IACD,CAxBD;EAyBD,CA1BgB,CAAjB;EA2BAN,QAAQ,CAACkB,OAAT,CAAiBrB,GAAG,CAACsB,OAArB;AACD,CA7BD;;AA+BA,SAASvB,WAAT"},"metadata":{},"sourceType":"module"}