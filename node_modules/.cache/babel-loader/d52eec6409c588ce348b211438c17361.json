{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sauls.DESKTOP-PNDI2L9\\\\OneDrive\\\\Escritorio\\\\PRUEBA CLONACION DE REPOSITORIO REACT\\\\movie-app-main\\\\src\\\\context\\\\userContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { useLocalStorage } from \"hooks\";\nimport { getAccount, getSessionId, Toast, rateMovie, toggleFavorite, toggleWatchlater, deleteRateMovie } from \"utils\";\nimport translationsRaw from \"translations.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialLanguage = \"en-US\";\nconst translations = JSON.parse(JSON.stringify(translationsRaw));\nconst UserContext = /*#__PURE__*/createContext({\n  user: {},\n  setUser: data => {},\n  language: \"\",\n  setLanguage: data => {},\n  texts: {},\n  token: \"\",\n  setToken: data => {},\n  sessionId: \"\",\n  setSessionId: data => {},\n  popup: \"\",\n  setPopup: data => {},\n  handleFavorite: data => {},\n  handleWatchlater: data => {},\n  handleRating: data => {},\n  handleDeleteRating: data => {}\n});\n\nconst UserProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [token, setToken] = useLocalStorage(\"token_request_tmdb\", \"\");\n  const [language, setLanguage] = useLocalStorage(\"language_tmdb\", initialLanguage);\n  const [texts, setTexts] = useState(translations[language]);\n  const [sessionId, setSessionId] = useState(\"\");\n  const [user, setUser] = useState({\n    name: \"\",\n    username: \"\",\n    avatar: \"\",\n    id: 0\n  });\n  const [popup, setPopup] = useState(\"\"); // Function to change language\n\n  const handleLanguage = lang => {\n    setLanguage(lang);\n    setTexts(translations[lang]);\n  }; // Function to launch a toast with the message login needed\n\n\n  const handleLoginNeeded = () => {\n    Toast.fire({\n      icon: \"success\",\n      title: texts.messages.needLogin\n    });\n  }; // Function to toggle favorite\n\n\n  const handleFavorite = async _ref2 => {\n    let {\n      movie_id,\n      favorite\n    } = _ref2;\n\n    if (!sessionId) {\n      handleLoginNeeded();\n      return;\n    }\n\n    const res = await toggleFavorite({\n      movie_id,\n      favorite,\n      add: texts.messages.addFavorite,\n      remove: texts.messages.removeFavorite,\n      err: texts.errors.errorFavorite,\n      session_id: sessionId,\n      account_id: user.id\n    });\n    return res;\n  }; // Function to toggle watchlater\n\n\n  const handleWatchlater = async _ref3 => {\n    let {\n      media_id,\n      watchlater\n    } = _ref3;\n\n    if (!sessionId) {\n      handleLoginNeeded();\n      return;\n    }\n\n    const res = await toggleWatchlater({\n      media_id,\n      watchlater,\n      add: texts.messages.addWatchlater,\n      remove: texts.messages.removeWatchlater,\n      err: texts.errors.errorPost,\n      session_id: sessionId,\n      account_id: user.id\n    });\n    return res;\n  };\n\n  const handleRating = async _ref4 => {\n    let {\n      movie_id,\n      value\n    } = _ref4;\n\n    if (!sessionId) {\n      handleLoginNeeded();\n      return;\n    }\n\n    const res = await rateMovie({\n      movie_id,\n      value: value / 10,\n      session_id: sessionId,\n      success: texts.messages.rateMovie,\n      err: texts.errors.errorPost\n    });\n    return res;\n  };\n\n  const handleDeleteRating = async _ref5 => {\n    let {\n      movie_id\n    } = _ref5;\n    const res = await deleteRateMovie({\n      movie_id,\n      session_id: sessionId,\n      success: texts.messages.unrateMovie,\n      err: texts.errors.errorPost\n    });\n    return res;\n  };\n\n  const initialRequest = async () => {\n    try {\n      const session_id = await getSessionId(token);\n      setSessionId(session_id);\n      const data = await getAccount(session_id);\n      const {\n        id,\n        username,\n        name\n      } = data;\n      const avatar = data.avatar.gravatar.hash;\n      const user = {\n        id,\n        username,\n        name,\n        avatar\n      };\n      setUser(user);\n      Toast.fire({\n        icon: \"success\",\n        title: `${texts.messages.welcome} ${name}!`\n      });\n    } catch (err) {\n      Toast.fire({\n        icon: \"error\",\n        title: texts.errors.errorLogin\n      }).then(() => console.log(err));\n    }\n  };\n\n  useEffect(() => {\n    if (token) {\n      initialRequest();\n    }\n  }, [token]); // eslint-disable-line\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser,\n      language,\n      setLanguage: handleLanguage,\n      texts,\n      token,\n      setToken,\n      sessionId,\n      setSessionId,\n      popup,\n      setPopup,\n      handleFavorite,\n      handleWatchlater,\n      handleRating,\n      handleDeleteRating\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UserProvider, \"khAaul7WprTr8zSPIIYAFF4CkZY=\", false, function () {\n  return [useLocalStorage, useLocalStorage];\n});\n\n_c = UserProvider;\nexport { UserContext, UserProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useLocalStorage","getAccount","getSessionId","Toast","rateMovie","toggleFavorite","toggleWatchlater","deleteRateMovie","translationsRaw","initialLanguage","translations","JSON","parse","stringify","UserContext","user","setUser","data","language","setLanguage","texts","token","setToken","sessionId","setSessionId","popup","setPopup","handleFavorite","handleWatchlater","handleRating","handleDeleteRating","UserProvider","children","setTexts","name","username","avatar","id","handleLanguage","lang","handleLoginNeeded","fire","icon","title","messages","needLogin","movie_id","favorite","res","add","addFavorite","remove","removeFavorite","err","errors","errorFavorite","session_id","account_id","media_id","watchlater","addWatchlater","removeWatchlater","errorPost","value","success","unrateMovie","initialRequest","gravatar","hash","welcome","errorLogin","then","console","log"],"sources":["C:/Users/sauls.DESKTOP-PNDI2L9/OneDrive/Escritorio/PRUEBA CLONACION DE REPOSITORIO REACT/movie-app-main/src/context/userContext.tsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport { useLocalStorage } from \"hooks\";\nimport {\n\tgetAccount,\n\tgetSessionId,\n\tToast,\n\trateMovie,\n\ttoggleFavorite,\n\ttoggleWatchlater,\n\tdeleteRateMovie,\n} from \"utils\";\nimport translationsRaw from \"translations.json\";\nconst initialLanguage = \"en-US\";\nconst translations = JSON.parse(JSON.stringify(translationsRaw));\n\ntype wildcardProps = {\n\t[key: string]: any;\n};\n\ntype userType = {\n\tname: string;\n\tusername: string;\n\tavatar: string;\n\tid: number;\n};\n\ninterface propsUserProvider {\n\tchildren: React.ReactNode;\n}\n\ninterface handleFavoriteProps {\n\tmovie_id: number;\n\tfavorite: boolean;\n}\n\ninterface handleWatchLaterProps {\n\tmedia_id: number;\n\twatchlater: boolean;\n}\n\ninterface handleRatingProps {\n\tmovie_id: number;\n\tvalue: number;\n}\n\ninterface handleDeleteRatingProps {\n\tmovie_id: number;\n}\n\nconst UserContext = createContext({\n\tuser: {} as userType,\n\tsetUser: (data: userType) => {},\n\tlanguage: \"\",\n\tsetLanguage: (data: string) => {},\n\ttexts: {} as wildcardProps,\n\ttoken: \"\",\n\tsetToken: (data: string) => {},\n\tsessionId: \"\",\n\tsetSessionId: (data: string) => {},\n\tpopup: \"\",\n\tsetPopup: (data: string) => {},\n\thandleFavorite: (data: handleFavoriteProps): any => {},\n\thandleWatchlater: (data: handleWatchLaterProps): any => {},\n\thandleRating: (data: handleRatingProps): any => {},\n\thandleDeleteRating: (data: handleDeleteRatingProps): any => {},\n});\n\nconst UserProvider = ({ children }: propsUserProvider) => {\n\tconst [token, setToken] = useLocalStorage(\"token_request_tmdb\", \"\");\n\tconst [language, setLanguage] = useLocalStorage(\"language_tmdb\", initialLanguage);\n\tconst [texts, setTexts] = useState(translations[language as keyof typeof translations]);\n\tconst [sessionId, setSessionId] = useState(\"\");\n\tconst [user, setUser] = useState({ name: \"\", username: \"\", avatar: \"\", id: 0 });\n\tconst [popup, setPopup] = useState(\"\");\n\n\t// Function to change language\n\tconst handleLanguage = (lang: string) => {\n\t\tsetLanguage(lang);\n\t\tsetTexts(translations[lang as keyof typeof translations]);\n\t};\n\n\t// Function to launch a toast with the message login needed\n\tconst handleLoginNeeded = () => {\n\t\tToast.fire({\n\t\t\ticon: \"success\",\n\t\t\ttitle: texts.messages.needLogin,\n\t\t});\n\t};\n\n\t// Function to toggle favorite\n\tconst handleFavorite = async ({ movie_id, favorite }: handleFavoriteProps) => {\n\t\tif (!sessionId) {\n\t\t\thandleLoginNeeded();\n\t\t\treturn;\n\t\t}\n\t\tconst res = await toggleFavorite({\n\t\t\tmovie_id,\n\t\t\tfavorite,\n\t\t\tadd: texts.messages.addFavorite,\n\t\t\tremove: texts.messages.removeFavorite,\n\t\t\terr: texts.errors.errorFavorite,\n\t\t\tsession_id: sessionId,\n\t\t\taccount_id: user.id,\n\t\t});\n\n\t\treturn res;\n\t};\n\n\t// Function to toggle watchlater\n\tconst handleWatchlater = async ({ media_id, watchlater }: handleWatchLaterProps) => {\n\t\tif (!sessionId) {\n\t\t\thandleLoginNeeded();\n\t\t\treturn;\n\t\t}\n\t\tconst res = await toggleWatchlater({\n\t\t\tmedia_id,\n\t\t\twatchlater,\n\t\t\tadd: texts.messages.addWatchlater,\n\t\t\tremove: texts.messages.removeWatchlater,\n\t\t\terr: texts.errors.errorPost,\n\t\t\tsession_id: sessionId,\n\t\t\taccount_id: user.id,\n\t\t});\n\n\t\treturn res;\n\t};\n\n\tconst handleRating = async ({ movie_id, value }: handleRatingProps) => {\n\t\tif (!sessionId) {\n\t\t\thandleLoginNeeded();\n\t\t\treturn;\n\t\t}\n\t\tconst res = await rateMovie({\n\t\t\tmovie_id,\n\t\t\tvalue: value / 10,\n\t\t\tsession_id: sessionId,\n\t\t\tsuccess: texts.messages.rateMovie,\n\t\t\terr: texts.errors.errorPost,\n\t\t});\n\n\t\treturn res;\n\t};\n\n\tconst handleDeleteRating = async ({ movie_id }: handleDeleteRatingProps) => {\n\t\tconst res = await deleteRateMovie({\n\t\t\tmovie_id,\n\t\t\tsession_id: sessionId,\n\t\t\tsuccess: texts.messages.unrateMovie,\n\t\t\terr: texts.errors.errorPost,\n\t\t});\n\n\t\treturn res;\n\t};\n\n\tconst initialRequest = async () => {\n\t\ttry {\n\t\t\tconst session_id = await getSessionId(token);\n\t\t\tsetSessionId(session_id);\n\n\t\t\tconst data = await getAccount(session_id);\n\t\t\tconst { id, username, name } = data;\n\t\t\tconst avatar = data.avatar.gravatar.hash;\n\t\t\tconst user = { id, username, name, avatar };\n\t\t\tsetUser(user);\n\n\t\t\tToast.fire({\n\t\t\t\ticon: \"success\",\n\t\t\t\ttitle: `${texts.messages.welcome} ${name}!`,\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tToast.fire({\n\t\t\t\ticon: \"error\",\n\t\t\t\ttitle: texts.errors.errorLogin,\n\t\t\t}).then(() => console.log(err));\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (token) {\n\t\t\tinitialRequest();\n\t\t}\n\t}, [token]); // eslint-disable-line\n\n\treturn (\n\t\t<UserContext.Provider\n\t\t\tvalue={{\n\t\t\t\tuser,\n\t\t\t\tsetUser,\n\t\t\t\tlanguage,\n\t\t\t\tsetLanguage: handleLanguage,\n\t\t\t\ttexts,\n\t\t\t\ttoken,\n\t\t\t\tsetToken,\n\t\t\t\tsessionId,\n\t\t\t\tsetSessionId,\n\t\t\t\tpopup,\n\t\t\t\tsetPopup,\n\t\t\t\thandleFavorite,\n\t\t\t\thandleWatchlater,\n\t\t\t\thandleRating,\n\t\t\t\thandleDeleteRating,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</UserContext.Provider>\n\t);\n};\n\nexport { UserContext, UserProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}